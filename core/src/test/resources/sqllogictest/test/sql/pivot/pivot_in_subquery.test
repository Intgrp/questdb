# todo(nwoolmer): update these in future when we support subqueries like this

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE Cities(Country VARCHAR, Name VARCHAR, Year INT, Population INT);

statement ok
INSERT INTO Cities VALUES ('NL', 'Amsterdam', 2000, 1005),
('NL', 'Amsterdam', 2010, 1065),
('NL', 'Amsterdam', 2020, 1158),
('US', 'Seattle', 2000, 564),
('US', 'Seattle', 2010, 608),
('US', 'Seattle', 2020, 738),
('US', 'New York City', 2000, 8015),
('US', 'New York City', 2010, 8175),
('US', 'New York City', 2020, 8772);


# PIVOT Cities ON Year IN (SELECT Year FROM Cities ORDER BY Year DESC) USING SUM(Population);
# We don't support dynamic SQL like this yet
# order the pivot columns
#query IIIII rowsort
statement error
Cities PIVOT (
    sum(population)
    FOR Year IN (SELECT YEAR FROM Cities ORDER BY YEAR DESC)
    GROUP BY Country, Name
    ORDER BY Country, Name
);
#----
#NL	Amsterdam	1158	1065	1005
#US	New York City	8772	8175	8015
#US	Seattle	738	608	564

#query IIIII rowsort
#PIVOT Cities ON Year IN (SELECT YEAR FROM (SELECT Year, SUM(POPULATION) AS popsum FROM Cities GROUP BY Year ORDER BY popsum DESC)) USING SUM(Population);
#----
#NL	Amsterdam	1158	1065	1005
#US	New York City	8772	8175	8015
#US	Seattle	738	608	564

#query IIIII rowsort
#PIVOT Cities ON Year IN (SELECT '2010' UNION ALL SELECT '2000' UNION ALL SELECT '2020') USING SUM(Population);
#----
#NL	Amsterdam	1065	1005	1158
#US	New York City	8175	8015	8772
#US	Seattle	608	564	738

#statement error
#PIVOT Cities ON Year IN (SELECT xx FROM Cities) USING SUM(Population);
#----
#<REGEX>:Binder Error.*Referenced column.*not found.*